#!/usr/bin/perl
#
#
# SYNTAX:
# 	cleanup_import
#
# DESCRIPTION:
#	Deletes odw data based on the last_successful_dataload_timev value
#
# AUTHORS:
#	Copyright (C) 2003-2012 Opsview Limited. All rights reserved
#
#    This file is part of Opsview
#
#    Opsview is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    Opsview is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Opsview; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

use strict;
use FindBin qw($Bin);
use lib "$Bin/../lib", "$Bin/../perl/lib";
use Opsview::Config;
use Odw;

my $odwdb = Odw->db_Main;

my $opsview_instance_id = Opsview::Config->opsview_instance_id;

# Get last successful dataload
# This works because import_runtime will not allow any further imports where status != success for all rows
my $id = $odwdb->selectrow_array("SELECT MAX(id) FROM dataloads WHERE status='success' AND opsview_instance_id = $opsview_instance_id");
my $last_successful_dataload_timev;
if ($id) {
    $last_successful_dataload_timev = $odwdb->selectrow_array("SELECT period_end_timev FROM dataloads WHERE id=$id");
}

unless ($last_successful_dataload_timev) {
    print "There has never been a successful dataload! Cleanup cannot occur", $/;
    exit 1;
}

print "Running cleanup for all data after " . ( scalar( localtime($last_successful_dataload_timev) ) ) . " on this opsview instance\n";

# This is not completely clean because the downtime_*_history tables are populated once with a start time and updated with an end time
# This script can't possibly know if it needs to be removed or not

$odwdb->do( "
DELETE acknowledgement_host 
FROM acknowledgement_host, hosts 
WHERE entry_datetime > FROM_UNIXTIME($last_successful_dataload_timev) 
 AND acknowledgement_host.host=hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE acknowledgement_service 
FROM acknowledgement_service, servicechecks, hosts 
WHERE entry_datetime > FROM_UNIXTIME($last_successful_dataload_timev) 
 AND acknowledgement_service.service = servicechecks.id 
 AND servicechecks.host = hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE performance_data 
FROM performance_data, performance_labels, hosts 
WHERE datetime > FROM_UNIXTIME($last_successful_dataload_timev)
 AND performance_data.performance_label = performance_labels.id 
 AND performance_labels.host = hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE servicecheck_results 
FROM servicecheck_results, servicechecks, hosts 
WHERE start_datetime > FROM_UNIXTIME($last_successful_dataload_timev) 
 AND servicecheck_results.servicecheck = servicechecks.id 
 AND servicechecks.host = hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE service_availability_hourly_summary 
FROM service_availability_hourly_summary, servicechecks, hosts 
WHERE start_datetime > FROM_UNIXTIME($last_successful_dataload_timev) 
 AND service_availability_hourly_summary.servicecheck = servicechecks.id 
 AND servicechecks.host = hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE performance_hourly_summary 
FROM performance_hourly_summary, performance_labels, hosts 
WHERE start_datetime > FROM_UNIXTIME($last_successful_dataload_timev)
 AND performance_hourly_summary.performance_label = performance_labels.id 
 AND performance_labels.host = hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE state_history 
FROM state_history, servicechecks, hosts 
WHERE datetime > FROM_UNIXTIME($last_successful_dataload_timev) 
 AND state_history.servicecheck = servicechecks.id 
 AND servicechecks.host = hosts.id 
 AND hosts.opsview_instance_id = $opsview_instance_id
" );

# This needs to be +1 to make it a start time, which are the values held in this table
$odwdb->do( "
DELETE FROM service_saved_state 
WHERE start_timev = $last_successful_dataload_timev + 3601
 AND opsview_instance_id = $opsview_instance_id
" );

$odwdb->do( "
DELETE FROM dataloads 
WHERE status!='success' 
 AND opsview_instance_id = $opsview_instance_id
" );

print "Finished cleanup\n";
